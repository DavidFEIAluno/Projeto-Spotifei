/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.PlaylistController;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import model.Usuario;
import model.Playlist;

/**
 *
 * @author ivald
 * Tela playlist, uma das mais complexas, com varias funcionalidades
 * focada em criar as plylists e adicionar musicas a elas, utilizei na forma id 
 * para um acesso mais pratico
 */

public class TelaPlaylist extends javax.swing.JPanel {
    
        private Usuario usuarioLogado;
        private Map<String, Integer> mapaPlaylists;


    /**
     * Creates new form TelaPlaylist
     */
    public TelaPlaylist() {
        initComponents();
        
    }
    
    public TelaPlaylist(Usuario usuarioLogado) {
        initComponents();
        this.usuarioLogado = usuarioLogado;
    }
    
    private void atualizarListaPlaylists(int usuarioId) {
        PlaylistController controller = new PlaylistController();
        List<Playlist> playlists = controller.listarPlaylistsUsuario(usuarioId);

        DefaultListModel<String> model = new DefaultListModel<>();
        mapaPlaylists = new HashMap<>(); 
        for (Playlist playlist : playlists) {
            model.addElement(playlist.getNome());
            mapaPlaylists.put(playlist.getNome(), playlist.getId()); // associa nome ao ID
        }
    listaPlaylists.setModel(model);
}


    public String getPlaylistSelecionada() {
        return listaPlaylists.getSelectedValue();
    }
    public void atualizarLista() {
    PlaylistController controller = new PlaylistController();
    List<Playlist> playlists = controller.getPlaylistsPorUsuario(usuarioLogado.getId());
    
    DefaultListModel<String> model = new DefaultListModel<>();
    mapaPlaylists = new HashMap<>(); 
    
    // Iterando pela lista de playlists para adicionar o nome e associar ao id
    for (Playlist playlist : playlists) {
        String nome = playlist.getNome();  // Obtém o nome da playlist
        int id = playlist.getId();  // Obtém o id da playlist
        
        model.addElement(nome);  // Adiciona o nome da playlist ao modelo da lista
        mapaPlaylists.put(nome, id);  // Associa o nome da playlist ao id no mapa
    }
    
    listaPlaylists.setModel(model);  // Atualiza a lista na interface gráfica
}



    public JButton getBtnCriar() { return btnCriar; }
    public JButton getBtnEditar() { return btnEditar; }
    public JButton getBtnExcluir() { return btnExcluir; }
    public JButton getBtnAdicionarMusica() { return btnAdicionarMusica; }
    public JButton getBtnRemoverMusica() { return btnRemoverMusica; }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaPlaylists = new javax.swing.JList<>();
        jScrollPaneTelaPlay = new javax.swing.JScrollPane();
        jPanelTelaPlay = new javax.swing.JPanel();
        btnCriar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAdicionarMusica = new javax.swing.JButton();
        btnRemoverMusica = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        listaPlaylists.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(listaPlaylists);

        jPanelTelaPlay.setBackground(new java.awt.Color(0, 0, 0));
        jPanelTelaPlay.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnCriar.setText("Criar Playlist");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar Nome");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir Playlist");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAdicionarMusica.setText("Adicionar Música");
        btnAdicionarMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarMusicaActionPerformed(evt);
            }
        });

        btnRemoverMusica.setText("Remover Música");
        btnRemoverMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverMusicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTelaPlayLayout = new javax.swing.GroupLayout(jPanelTelaPlay);
        jPanelTelaPlay.setLayout(jPanelTelaPlayLayout);
        jPanelTelaPlayLayout.setHorizontalGroup(
            jPanelTelaPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTelaPlayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTelaPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCriar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoverMusica, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(btnAdicionarMusica, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelTelaPlayLayout.setVerticalGroup(
            jPanelTelaPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTelaPlayLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCriar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarMusica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoverMusica)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelTelaPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTelaPlay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneTelaPlay)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTelaPlay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
        String nome = JOptionPane.showInputDialog(this, "Digite o nome da playlist:");
    if (nome != null && !nome.trim().isEmpty()) {
        PlaylistController controller = new PlaylistController();
        controller.criarPlaylist(usuarioLogado.getId(), nome);
        atualizarListaPlaylists(usuarioLogado.getId());
    }
    }//GEN-LAST:event_btnCriarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
    String nomeSelecionado = listaPlaylists.getSelectedValue();
    if (nomeSelecionado != null) {
        int id = mapaPlaylists.get(nomeSelecionado);
        String novoNome = JOptionPane.showInputDialog(this, "Novo nome:", nomeSelecionado);
        if (novoNome != null && !novoNome.trim().isEmpty()) {
            PlaylistController controller = new PlaylistController();
            controller.atualizarPlaylist(id, usuarioLogado.getId(), novoNome);
            atualizarListaPlaylists(usuarioLogado.getId());
        }
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
    String nomeSelecionado = listaPlaylists.getSelectedValue();
    if (nomeSelecionado != null) {
        int id = mapaPlaylists.get(nomeSelecionado);
        int confirm = JOptionPane.showConfirmDialog(this, "Excluir a playlist?");
        if (confirm == JOptionPane.YES_OPTION) {
            PlaylistController controller = new PlaylistController();
            controller.excluirPlaylist(id, usuarioLogado.getId());
            atualizarListaPlaylists(usuarioLogado.getId());
        }
    }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAdicionarMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarMusicaActionPerformed
   String nomeSelecionado = listaPlaylists.getSelectedValue();
    if (nomeSelecionado != null) {
        int id = mapaPlaylists.get(nomeSelecionado);
        String idMusicaStr = JOptionPane.showInputDialog(this, "ID da música:");
        try {
            int idMusica = Integer.parseInt(idMusicaStr);
            PlaylistController controller = new PlaylistController();
            controller.adicionarMusica(id, idMusica, 1); // ordem = 1 ou pode ser calculada
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID inválido.");
        }
    }
    }//GEN-LAST:event_btnAdicionarMusicaActionPerformed

    private void btnRemoverMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverMusicaActionPerformed
    String nomeSelecionado = listaPlaylists.getSelectedValue();
    if (nomeSelecionado != null) {
        int id = mapaPlaylists.get(nomeSelecionado);
        String idMusicaStr = JOptionPane.showInputDialog(this, "ID da música a remover:");
        try {
            int idMusica = Integer.parseInt(idMusicaStr);
            PlaylistController controller = new PlaylistController();
            controller.removerMusica(id, idMusica);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID inválido.");
        }
    }
    }//GEN-LAST:event_btnRemoverMusicaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarMusica;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnRemoverMusica;
    private javax.swing.JPanel jPanelTelaPlay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneTelaPlay;
    private javax.swing.JList<String> listaPlaylists;
    // End of variables declaration//GEN-END:variables
}
